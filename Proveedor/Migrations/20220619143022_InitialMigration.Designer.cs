// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proveedor.Persistence.Database;

#nullable disable

namespace Proveedor.Migrations
{
    [DbContext(typeof(ProveedorDbContext))]
    [Migration("20220619143022_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrandEnterprise", b =>
                {
                    b.Property<string>("BrandsCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("EnterprisesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BrandsCode", "EnterprisesId");

                    b.HasIndex("EnterprisesId");

                    b.ToTable("BrandEnterprise");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Brand", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Enterprise", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Part", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RepairRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RepairRequestId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Participation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("RepairRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("RepairRequestId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.PartQuotation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Original")
                        .HasColumnType("bit");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("discount_percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("PartQuotations");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.RepairRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RepairRequests");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LdapID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("LdapID")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BrandEnterprise", b =>
                {
                    b.HasOne("Proveedor.Persistence.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandsCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proveedor.Persistence.Entities.Enterprise", null)
                        .WithMany()
                        .HasForeignKey("EnterprisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Part", b =>
                {
                    b.HasOne("Proveedor.Persistence.Entities.RepairRequest", "RepairRequest")
                        .WithMany("Parts")
                        .HasForeignKey("RepairRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairRequest");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Participation", b =>
                {
                    b.HasOne("Proveedor.Persistence.Entities.Enterprise", "Enterprise")
                        .WithMany("Participations")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proveedor.Persistence.Entities.RepairRequest", "RepairRequest")
                        .WithMany()
                        .HasForeignKey("RepairRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");

                    b.Navigation("RepairRequest");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.PartQuotation", b =>
                {
                    b.HasOne("Proveedor.Persistence.Entities.Part", "Part")
                        .WithMany("PartQuotations")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.User", b =>
                {
                    b.HasOne("Proveedor.Persistence.Entities.Enterprise", "Enterprise")
                        .WithMany("Users")
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Enterprise", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.Part", b =>
                {
                    b.Navigation("PartQuotations");
                });

            modelBuilder.Entity("Proveedor.Persistence.Entities.RepairRequest", b =>
                {
                    b.Navigation("Parts");
                });
#pragma warning restore 612, 618
        }
    }
}
